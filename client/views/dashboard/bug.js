// Generated by CoffeeScript 1.3.3
(function() {
  var giveVote;

  giveVote = function(e, t, agreed) {
    var params, vote;
    vote = Votes.findOne({
      bugId: t.data._id,
      userId: Meteor.userId()
    });
    params = {
      agreed: agreed,
      bugId: t.data._id,
      userId: Meteor.userId()
    };
    if (vote) {
      return Votes.update(vote._id, {
        $set: params
      });
    } else {
      return Votes.insert(params);
    }
  };

  Template.bug.helpers({
    createdFromNow: function() {
      return moment(this.createdAt).fromNow();
    },
    aggreed: function(val) {
      var vote;
      vote = Votes.findOne({
        bugId: this._id,
        userId: Meteor.userId()
      });
      if (vote && vote.agreed === val) {
        return "selected";
      }
    },
    btnText: function(val) {
      var vote;
      vote = Votes.findOne({
        bugId: this._id,
        userId: Meteor.userId()
      });
      if (val) {
        if (vote && vote.agreed === val) {
          return "+1";
        } else {
          return "I agree";
        }
      } else {
        if (vote && vote.agreed === val) {
          return "-1";
        } else {
          return "I disagree";
        }
      }
    },
    conterClass: function(val) {
      if (this.vote > 0) {
        return "green";
      } else if (this.vote < 0) {
        return "red";
      }
    }
  });

  Template.bug.events({
    "click .agree": function(e, t) {
      return giveVote(e, t, true);
    },
    "click .disagree": function(e, t) {
      return giveVote(e, t, false);
    }
  });

}).call(this);
